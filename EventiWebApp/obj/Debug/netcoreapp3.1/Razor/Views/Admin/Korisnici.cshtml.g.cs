#pragma checksum "C:\Users\jopy_\OneDrive\Desktop\PMA_Eventi_JospiaRadak\EventiWebApp\EventiWebApp\Views\Admin\Korisnici.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "24d80ac22ba85ff7016d8d58ad7897a2cef89f9b"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Admin_Korisnici), @"mvc.1.0.view", @"/Views/Admin/Korisnici.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\jopy_\OneDrive\Desktop\PMA_Eventi_JospiaRadak\EventiWebApp\EventiWebApp\Views\_ViewImports.cshtml"
using EventiWebApp;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\jopy_\OneDrive\Desktop\PMA_Eventi_JospiaRadak\EventiWebApp\EventiWebApp\Views\_ViewImports.cshtml"
using EventiWebApp.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"24d80ac22ba85ff7016d8d58ad7897a2cef89f9b", @"/Views/Admin/Korisnici.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"fba2c780577e12b7ece9d61237c7539af65388d1", @"/Views/_ViewImports.cshtml")]
    public class Views_Admin_Korisnici : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<div class=""table-responsive-sm"">
    <table class=""table-light table-hover table-responsive-md col-md-12 flex-md-grow-1"" id=""ispis"">
        <thead style=""height: 40px;"">
            <th>Id</th>
            <th>Ime</th>
            <th>Prezime</th>
            <th>Korisničko Ime</th>
            <th>Lozinka</th>
            <th>Email</th>
        </thead>
        <tbody id=""tbody"">
        </tbody>
    </table>
</div>
<script type=""text/javascript"">
    'use strict';
    function appendToTable(data) {
        console.log(data);
        for (var i = 0; i < data.length; i++) {
            let korisnik = data[i];
            console.log(korisnik);
            CreateRow(korisnik.idKorisnik, korisnik.ime, korisnik.prezime, korisnik.korisnickoIme, korisnik.lozinka, korisnik.email, korisnik.admin);
        }
    }
    function brisi(r) {
        if (confirm('Jeste li sigurni da želite obrisati korisnika?')) {
            console.log(""R: "" + r);
            var i = r.parentNode.parentNode.");
            WriteLiteral(@"rowIndex;
            var red = r.parentNode.parentNode;
            var id = red.firstChild.innerHTML;
            document.getElementById(""ispis"").deleteRow(i);
            axios.delete(`/api/admin/brisanjekorisnika/${id}`, id);
            setTimeout(function () { location.reload(true); }, 1000);
        }
    }

    function CreateRow(i, ime, prezime, korisnickoIme, lozinka, email, admin) {
        let tablica = document.getElementById('tbody');
        let row = tablica.insertRow();

        let stupac_id = row.insertCell();
        let stupac_ime = row.insertCell();
        let stupac_prezime = row.insertCell();
        let stupac_korisnickoIme = row.insertCell();
        let stupac_lozinka = row.insertCell();
        let stupac_email = row.insertCell();
        let stupac_brisi = row.insertCell();
        stupac_id.innerHTML = i;
        stupac_ime.innerHTML = ime;
        stupac_prezime.innerHTML = prezime;
        stupac_korisnickoIme.innerHTML = korisnickoIme;
        stupac_");
            WriteLiteral(@"lozinka.innerHTML = lozinka;
        stupac_email.innerHTML = email;
        if (admin == false) {
            stupac_brisi.innerHTML = '<button type=""button""  class=""btn btn-outline-dark btn-lg"" onclick=""brisi(this)"">Briši</button>';
        }
    }
    axios.get('/api/admin/svikorisnici').then(response => appendToTable(response.data))
</script>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
